### Tmux {{{
## Act like GNU screen
unbind C-b
set -g prefix C-a
bind C-a send-prefix

## Increase scrollback lines
set -g history-limit 10000

## Reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

## Mouse support
set -g mode-mouse on

## Request focus events from terminal so that several VIM plugins can work
## properly
set -g focus-events on
### }}}
### Panes {{{
## Smart pane switching with awareness of vim splits. Remove iTerm2 profile
## keybindings if necessary
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

## pane resizing
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5
### }}}
### Colors {{{
## Improve colors
set -g default-terminal "screen-256color"

## Soften status bar color from harsh green to light gray
set -g status-bg '#006666'
set -g status-fg '#aaaaaa'
### }}}
### Window {{{
## Start window numbering at 1
set -g base-index 1

## Set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

## Create new window
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

## Auto window rename
set-window-option -g automatic-rename

## use | and - to split the windows
bind-key | split-window -h
bind-key - split-window -v

## Navigate windows using 'Cmd + ]' and 'Cmd + ['. Add the following to iTerm2
## global key bindings (use 0x02 if you're using Ctrl-b as prefix key):
# -----------------------------------------------------------------------
# Key Combination |          Action           |  Tmux Meaning
# -----------------------------------------------------------------------
#     ⌘ [         | Send Hex codes: 0x01 0x70 |  Ctrl-a + p (prev window)
#     ⌘ ]         | Send Hex codes: 0x01 0x6e |  Ctrl-a + n (next window)
# -----------------------------------------------------------------------

## Navigate windows using 'Cmd + 1', 'Cmd + 2'... Add the following to iTerm2
## global key bindings (use 0x02 if you're using Ctrl-b as prefix key):
# -----------------------------------------------------------------------
# Key Combination |          Action           |  Tmux Meaning
# -----------------------------------------------------------------------
#     ⌘ 1         | Send Hex codes: 0x01 0x31 |  Ctrl-a + 1 (window #1)
#     ⌘ 2         | Send Hex codes: 0x01 0x32 |  Ctrl-a + 2 (window #2)
#     ⌘ 3         | Send Hex codes: 0x01 0x33 |  Ctrl-a + 3 (window #3)
#     ⌘ 4         | Send Hex codes: 0x01 0x34 |  Ctrl-a + 4 (window #4)
#     ⌘ 5         | Send Hex codes: 0x01 0x35 |  Ctrl-a + 5 (window #5)
# -----------------------------------------------------------------------
### }}}
### Status bar {{{
set-option -g status-utf8 on
set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
# set -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=white,bg=default]%a %l:%M %p#[default] #[fg=black]%Y-%m-%d '
set-option -g status-position top

### }}}
### Copy mode {{{
## Install reattach-to-user-namespace using homebrew
setw -g mode-keys vi
unbind p
bind p paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind -t vi-copy Escape cancel
### }}}

